@inject MainService mainService

<article>
    <header>
        <nav>
            <ul>
                <li>
                    @if(IsEdit)
                    {
                        <input @bind-value="@EditServer.Name" />
                    }
                    else
                    {
                        @(EditServer.Name)
                        <span> -</span>
                        <span class="@StatusColor" aria-busy="@(IsLoading ? "true" : "false")">
                            @(!IsValid ? "Invalid Hostname or IP" : IsLoading ? "Loading..." : IsOn ? "Online" : "Offline")
                        </span>
                    }
                </li>
            </ul>
            <ul>
                @if (IsEdit)
                {
                    <li><button type="button" @onclick="ClickSaveEdit" data-tooltip="Save">Save</button></li>
                }
                <li>
                    <button type="button" style="min-width: 48px" @onclick="ToggleEdit" data-tooltip="@(!IsEdit ? "Edit Server" : "Close Edit")">
                        @if (!IsEdit)
                        {
                            <img width="24" src="/edit.png" />
                        }
                        else
                        {
                            <img width="24" src="/close.png" />
                        }
                    </button>
                </li>
            </ul>
        </nav>
    </header>
    <div class="container">
        <input disabled="@(!IsEdit)" @bind-value="@EditServer.HostnameOrAddress" style="height: 40px;" aria-describedby="Hostname-Helper" />
        <small id="Hostname-Helper">Hostname or IP Address</small>

        <input disabled="@(!IsEdit)" @bind-value="@EditServer.MacAddress" style="height: 40px;" aria-describedby="Macaddress-Helper" />
        <small id="Macaddress-Helper">Mac Address</small>
    </div>
    <footer>
        <nav>
            <ul>
                <li>
                    <button type="button" @onclick="SendWake" disabled="@(IsOn || IsLoading || !IsValid)"
                            data-tooltip="Wake Me Up Inside!">
                        Wake Up
                    </button>
                </li>
            </ul>

            <ul>
                <li>
                    <button type="button" @onclick="Delete" data-tooltip="Delete Server"><img width="24" src="/bin.png" alt="bin.png" /></button>
                </li>
            </ul>
        </nav>
    </footer>
</article>

@code {
    [Parameter]
    public required Server server { get; set; }

    [Parameter]
    public required string Name { get; set; }

    [Parameter]
    public required string HostnameOrAddress { get; set; }

    [Parameter]
    public required string MacAddress { get; set; }

    [Parameter]
    public required bool IsOn { get; set; }

    [Parameter]
    public bool IsLoading { get; set; } = true;

    [Parameter]
    public bool IsValid { get; set; } = true;

    [Parameter]
    public string StatusColor { get; set; } = "pico-color-blue-550";

    [Parameter]
    public Action? OnEditSaved { get; set; }

    [Parameter]
    public Action<Server>? OnDelete { get; set; }

    private bool IsEdit { get; set; } = false;
    private Server EditServer = new()
    {
        Name = "",
        HostnameOrAddress = "",
        MacAddress = ""
    };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        EditServer = server;
    }

    protected override void OnParametersSet()
    {
        StatusColor = !IsValid ? "pico-color-amber-350" : IsLoading ? "pico-color-blue-550" : IsOn ? "pico-color-jade-400" : "pico-color-red-550";
        EditServer = server;
    }

    private void ToggleEdit()
    {
        IsEdit = !IsEdit;
    }

    private void ClickSaveEdit()
    {
        server = EditServer;
        IsEdit = false;
        OnEditSaved?.Invoke();
    }

    public void Reload()
    {
        StateHasChanged();
    }

    async void SendWake()
    {
        await mainService.SendWake(server.MacAddress);
    }

    void Delete()
    {
        OnDelete?.Invoke(server);
    }
}